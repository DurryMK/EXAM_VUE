{"remainingRequest":"D:\\durry\\HBx\\HBworkplace\\EXAM_VUE\\node_modules\\babel-loader\\lib\\index.js!D:\\durry\\HBx\\HBworkplace\\EXAM_VUE\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\durry\\HBx\\HBworkplace\\EXAM_VUE\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\durry\\HBx\\HBworkplace\\EXAM_VUE\\src\\components\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\durry\\HBx\\HBworkplace\\EXAM_VUE\\src\\components\\Home.vue","mtime":1606982587326},{"path":"D:\\durry\\HBx\\HBworkplace\\EXAM_VUE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606012761609},{"path":"D:\\durry\\HBx\\HBworkplace\\EXAM_VUE\\node_modules\\babel-loader\\lib\\index.js","mtime":1606012784177},{"path":"D:\\durry\\HBx\\HBworkplace\\EXAM_VUE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606012761609},{"path":"D:\\durry\\HBx\\HBworkplace\\EXAM_VUE\\node_modules\\vue-loader\\lib\\index.js","mtime":1606012779294}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _defineProperty from \"D:\\\\durry\\\\HBx\\\\HBworkplace\\\\EXAM_VUE\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar tabMap = new Map([['/Make', '新建试卷'], ['/Welcome', '欢迎页'], ['/List', '试卷列表'], ['/Personal', '个人信息']]); //标签卡与router-view的对应关系\n\nexport default {\n  name: 'home',\n  props: {},\n  components: {},\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      //界面内容\n      asideMenu: 100,\n      testLink: \"\",\n      dialogVisible: false,\n      visible: false,\n      loading: true,\n      isCollapse: true,\n      activeIndex: '100'\n    }, _defineProperty(_ref, \"isCollapse\", true), _defineProperty(_ref, \"fullscreenLoading\", false), _defineProperty(_ref, \"activeTab\", ''), _defineProperty(_ref, \"preTab\", ''), _defineProperty(_ref, \"editableTabs\", []), _defineProperty(_ref, \"tabIndex\", 1), _defineProperty(_ref, \"user\", []), _ref;\n  },\n  created: function created() {\n    this.initPage();\n  },\n  mounted: function mounted() {\n    var path = this.$route.path;\n\n    if (path == '/') {\n      path = '/Welcome';\n    }\n\n    if (!tabMap.has(path)) {\n      path = '/Welcome';\n    }\n\n    this.handleSelectAside(path);\n  },\n  watch: {\n    $route: {\n      handler: function handler(val, oldval) {// console.log(oldval)\n        // console.log(val); //新路由信息\n        // var path = val.path\n        // if (!tabMap.has(path)||path == '/') {\n        // \tpath = '/Welcome'\n        // }\n        // console.log(\"watch\",path)\n        // this.handleSelectAside(path)\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  methods: {\n    initPage: function initPage() {\n      var _this = this;\n\n      //获取初始化页面信息\n      this.$axios({\n        url: this.baseUrl + \"/home/initPage\",\n        method: \"GET\"\n      }).then(function (res) {\n        console.log(res);\n\n        if (res.data.E_BACKSTATUS == '0') {\n          //已有登录状态  展示个人信息\n          _this.user = res.data.user;\n        } else {\n          //未登录 跳转到登录界面\n          _this.$router.push(\"/Login\");\n        }\n      }).catch(function (e) {\n        console.log(\"网络异常\");\n\n        _this.$router.push(\"/EXAM\");\n      });\n    },\n    handleOpen: function handleOpen(key, keyPath) {\n      console.log(key, keyPath);\n    },\n    handleClose: function handleClose(key, keyPath) {\n      console.log(key, keyPath);\n    },\n    handleSelect: function handleSelect(key, keyPath) {\n      this.asideMenu = key;\n    },\n    exitLogin: function exitLogin() {\n      var _this2 = this;\n\n      //退出登录\n      this.$confirm('将要退出当前账号, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {}).catch(function () {\n        return;\n      });\n      this.$axios({\n        url: this.baseUrl + \"/access/exitLogin\",\n        method: \"GET\"\n      }).then(function (res) {\n        console.log(res);\n\n        if (res.data.E_BACKSTATUS == '0') {\n          //已有登录状态  展示个人信息\n          _this2.user = res.data.user;\n        } else {\n          //未登录 跳转到登录界面\n          _this2.$router.push(\"/Login\");\n        }\n      }).catch(function (e) {\n        console.log(\"网络异常\");\n\n        _this2.$router.push(\"/EXAM\");\n      });\n    },\n    //选中侧边导航栏时 新增标签卡 并定位到新标签卡 并使路由指向标签卡对应的地址\n    handleSelectAside: function handleSelectAside(key) {\n      if (!tabMap.has(key)) {\n        return;\n      } //1.跳转到对应的路由地址\n\n\n      this.$router.push(key);\n      console.log(this.hasTab(key));\n\n      if (this.hasTab(key)) {\n        //2.判断标签卡是否已存在\n        //2.1标签卡已经打开则跳转到对应的标签卡\n        this.activeTab = key;\n        this.preTab = key;\n        return;\n      } //3.标签不存在 创建新的标签卡\n\n\n      this.editableTabs.push({\n        title: tabMap.get(key),\n        name: key,\n        closable: true\n      }); //4.定位到新标签卡\n\n      this.activeTab = key;\n      this.preTab = key;\n    },\n    //选择主体内容的标签时\n    selectTab: function selectTab(data) {\n      if (this.activeTab == this.preTab) {\n        //2.选中的标签卡已经展示 则不操作\n        return;\n      } //3.点击新的标签卡 跳转到对应路由\n\n\n      this.preTab = this.activeTab;\n      this.$router.push(this.activeTab);\n    },\n    handleTabsClose: function handleTabsClose(data) {},\n    handleTabsEdit: function handleTabsEdit(targetName, action) {\n      if (action === 'add') {// let newTabName = ++this.tabIndex + '';\n        // this.editableTabs.push({\n        // \ttitle: 'New Tab',\n        // \tname: newTabName,\n        // \tcontent: 'New Tab content'\n        // });\n        // this.editableTabsValue = newTabName;\n      }\n\n      if (action === 'remove') {\n        var tabs = this.editableTabs;\n        var welcomeName = \"/Welcome\";\n        var activeName = this.activeTab;\n\n        if (activeName === targetName) {\n          //1.如果关闭的是当前打开的标签卡  \n          tabs.forEach(function (tab, index) {\n            if (tab.name === targetName) {\n              //2.获取当前页的下一页\n              var nextTab = tabs[index + 1] || tabs[index - 1];\n\n              if (nextTab) {\n                //3.打开下一页\n                activeName = nextTab.name;\n              } else {\n                //5.如果当前已经是最后一页  则打开欢迎页\n                activeName = welcomeName;\n              }\n            }\n          });\n        }\n\n        this.activeTab = activeName;\n        this.preTab = activeName;\n        this.editableTabs = tabs.filter(function (tab) {\n          return tab.name !== targetName;\n        });\n        this.handleSelectAside(activeName);\n      }\n    },\n    hasTab: function hasTab(key) {\n      var flag = false;\n      this.editableTabs.forEach(function (tab, index) {\n        if (tab.name == key) {\n          flag = true;\n        }\n      });\n      return flag;\n    }\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<style type=\"text/css\">\r\n\t.el-menu-vertical-demo:not(.el-menu--collapse) {\r\n\t\twidth: 200px;\r\n\t\tmin-height: 400px;\r\n\t}\r\n</style>\r\n<template>\r\n\t<el-container>\r\n\t\t<!-- 头部区域 -->\r\n\t\t<el-header>\r\n\t\t\t<el-menu :default-active=\"activeIndex\" class=\"el-menu-demo\" mode=\"horizontal\" @select=\"handleSelect\">\r\n\t\t\t\t<el-menu-item index=\"100\">\r\n\t\t\t\t\t<el-avatar fit=\"contain\" :src=\"user.imgUrl\"></el-avatar>\r\n\t\t\t\t\t<span style=\"margin-left: 10px;margin-top: 5px;\">{{user.username}}</span>\r\n\t\t\t\t</el-menu-item>\r\n\t\t\t\t<el-menu-item index=\"101\">控制中心</el-menu-item>\r\n\t\t\t</el-menu>\r\n\t\t</el-header>\r\n\t\t<el-container style=\"margin-top: 10px;\">\r\n\t\t\t<!-- 侧边菜单 ——控制中心 -->\r\n\t\t\t<el-aside v-show=\"asideMenu==101\" width=\"220px\">\r\n\t\t\t\t<el-menu class=\"el-menu-vertical-demo\" @select=\"handleSelectAside\" @open=\"handleOpen\" @close=\"handleClose\">\r\n\t\t\t\t\t<el-submenu index=\"试卷管理\">\r\n\t\t\t\t\t\t<template slot=\"title\">\r\n\t\t\t\t\t\t\t<i class=\"el-icon-location\"></i>\r\n\t\t\t\t\t\t\t<span>由我出题</span>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<el-menu-item-group>\r\n\t\t\t\t\t\t\t<el-menu-item index=\"/Make\">新建试卷<i class=\"el-icon-document-add\"></i>\r\n\t\t\t\t\t\t\t</el-menu-item>\r\n\t\t\t\t\t\t\t<el-menu-item index=\"/List\">试卷列表<i class=\"el-icon-setting\"></i></el-menu-item>\r\n\t\t\t\t\t\t</el-menu-item-group>\r\n\t\t\t\t\t</el-submenu>\r\n\t\t\t\t\t<el-menu-item index=\"加入考试\" @click=\"dialogVisible = true\">\r\n\t\t\t\t\t\t<span slot=\"title\"><i class=\"el-icon-menu\"></i>加入考试</span>\r\n\t\t\t\t\t</el-menu-item>\r\n\t\t\t\t\t<el-menu-item index=\"查看成绩\">\r\n\t\t\t\t\t\t<i class=\"el-icon-document\"></i>\r\n\t\t\t\t\t\t<span slot=\"title\">查看成绩</span>\r\n\t\t\t\t\t</el-menu-item>\r\n\t\t\t\t</el-menu>\r\n\t\t\t</el-aside>\r\n\t\t\t<!-- 侧边菜单 ——用户信息 -->\r\n\t\t\t<el-aside v-show=\"asideMenu==100\" width=\"220px\">\r\n\t\t\t\t<el-menu class=\"el-menu-vertical-demo\" @select=\"handleSelectAside\" @open=\"handleOpen\" @close=\"handleClose\">\r\n\t\t\t\t\t<el-submenu index=\"试卷管理\">\r\n\t\t\t\t\t\t<template slot=\"title\">\r\n\t\t\t\t\t\t\t<i class=\"el-icon-location\"></i>\r\n\t\t\t\t\t\t\t<span>试卷管理</span>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<el-menu-item-group>\r\n\t\t\t\t\t\t\t<el-menu-item index=\"/Make\">新建试卷<i class=\"el-icon-document-add\"></i>\r\n\t\t\t\t\t\t\t</el-menu-item>\r\n\t\t\t\t\t\t\t<el-menu-item index=\"/List\">试卷列表<i class=\"el-icon-setting\"></i></el-menu-item>\r\n\t\t\t\t\t\t</el-menu-item-group>\r\n\t\t\t\t\t</el-submenu>\r\n\t\t\t\t\t<el-menu-item index=\"实名认证\">\r\n\t\t\t\t\t\t<i class=\"el-icon-menu\"></i>\r\n\t\t\t\t\t\t<span slot=\"title\">实名认证</span>\r\n\t\t\t\t\t</el-menu-item>\r\n\t\t\t\t\t<el-menu-item index=\"/Personal\">\r\n\t\t\t\t\t\t<i class=\"el-icon-user\"></i>\r\n\t\t\t\t\t\t<span slot=\"title\">我的信息</span>\r\n\t\t\t\t\t</el-menu-item>\r\n\t\t\t\t\t<el-menu-item index=\"退出登录\" @click=\"exitLogin\">\r\n\t\t\t\t\t\t<span slot=\"title\"><i class=\"el-icon-switch-button\"></i>退出登录</span>\r\n\t\t\t\t\t</el-menu-item>\r\n\t\t\t\t</el-menu>\r\n\t\t\t</el-aside>\r\n\t\t\t<!-- 主体内容 -->\r\n\t\t\t<el-container style=\"height: 800px;\">\r\n\t\t\t\t<el-main>\r\n\t\t\t\t\t<el-tabs v-model=\"activeTab\" type=\"card\" editable @tab-click=\"selectTab\" @edit=\"handleTabsEdit\" @tab-remove=\"handleTabsClose\">\r\n\t\t\t\t\t\t<el-tab-pane :key=\"item.name\" v-for=\"(item, index) in editableTabs\" :label=\"item.title\" :name=\"item.name\">\r\n\t\t\t\t\t\t\t{{item.content}}\r\n\t\t\t\t\t\t</el-tab-pane>\r\n\t\t\t\t\t</el-tabs>\r\n\t\t\t\t\t<router-view></router-view>\r\n\t\t\t\t</el-main>\r\n\t\t\t</el-container>\r\n\t\t</el-container>\r\n\t\t<el-container>\r\n\t\t\t<!-- 底部 -->\r\n\t\t\t<el-footer>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<el-divider></el-divider>\r\n\t\t\t\t\t<span>©2020-2021 Durry. All rights reserved.</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<el-dialog :visible.sync=\"dialogVisible\" width=\"45%\" @close=\"dialogVisible=false\">\r\n\t\t\t\t\t<el-input placeholder=\"请输入试卷编号或考试链接加入考试\" v-model=\"testLink\" clearable>\r\n\t\t\t\t\t</el-input>\r\n\t\t\t\t</el-dialog>\r\n\t\t\t</el-footer>\r\n\t\t</el-container>\r\n\t</el-container>\r\n</template>\r\n\r\n<script>\r\n\tlet tabMap = new Map([\r\n\t\t['/Make', '新建试卷'],\r\n\t\t['/Welcome', '欢迎页'],\r\n\t\t['/List', '试卷列表'],\r\n\t\t['/Personal', '个人信息'],\r\n\t]) //标签卡与router-view的对应关系\r\n\r\n\texport default {\r\n\t\tname: 'home',\r\n\t\tprops: {\r\n\r\n\t\t},\r\n\t\tcomponents: {},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\t//界面内容\r\n\t\t\t\tasideMenu: 100,\r\n\t\t\t\ttestLink: \"\",\r\n\t\t\t\tdialogVisible: false,\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tloading: true,\r\n\t\t\t\tisCollapse: true,\r\n\t\t\t\tactiveIndex: '100',\r\n\t\t\t\tisCollapse: true,\r\n\t\t\t\tfullscreenLoading: false,\r\n\t\t\t\tactiveTab: '', //当前激活的标签卡\r\n\t\t\t\tpreTab: '', //上一个激活的标签卡\r\n\t\t\t\teditableTabs: [], //标签卡的容器\r\n\t\t\t\ttabIndex: 1,\r\n\r\n\t\t\t\t//用户信息\r\n\t\t\t\tuser: [],\r\n\t\t\t};\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\tthis.initPage()\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tvar path = this.$route.path\r\n\t\t\tif (path == '/') {\r\n\t\t\t\tpath = '/Welcome'\r\n\t\t\t}\r\n\t\t\tif (!tabMap.has(path)) {\r\n\t\t\t\tpath = '/Welcome'\r\n\t\t\t}\r\n\t\t\tthis.handleSelectAside(path)\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\t$route: {\r\n\t\t\t\thandler(val, oldval) {\r\n\t\t\t\t\t// console.log(oldval)\r\n\t\t\t\t\t// console.log(val); //新路由信息\r\n\t\t\t\t\t// var path = val.path\r\n\t\t\t\t\t// if (!tabMap.has(path)||path == '/') {\r\n\t\t\t\t\t// \tpath = '/Welcome'\r\n\t\t\t\t\t// }\r\n\t\t\t\t\t// console.log(\"watch\",path)\r\n\t\t\t\t\t// this.handleSelectAside(path)\r\n\t\t\t\t},\r\n\t\t\t\t// 深度观察监听\r\n\t\t\t\tdeep: true\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tinitPage() { //获取初始化页面信息\r\n\t\t\t\tthis.$axios({\r\n\t\t\t\t\turl: this.baseUrl + \"/home/initPage\",\r\n\t\t\t\t\tmethod: \"GET\",\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tconsole.log(res)\r\n\t\t\t\t\tif (res.data.E_BACKSTATUS == '0') {\r\n\t\t\t\t\t\t//已有登录状态  展示个人信息\r\n\t\t\t\t\t\tthis.user = res.data.user\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//未登录 跳转到登录界面\r\n\t\t\t\t\t\tthis.$router.push(\"/Login\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch(e => {\r\n\t\t\t\t\tconsole.log(\"网络异常\")\r\n\t\t\t\t\tthis.$router.push(\"/EXAM\")\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\thandleOpen(key, keyPath) {\r\n\t\t\t\tconsole.log(key, keyPath);\r\n\t\t\t},\r\n\t\t\thandleClose(key, keyPath) {\r\n\t\t\t\tconsole.log(key, keyPath);\r\n\t\t\t},\r\n\t\t\thandleSelect(key, keyPath) {\r\n\t\t\t\tthis.asideMenu = key\r\n\t\t\t},\r\n\t\t\texitLogin() { //退出登录\r\n\t\t\t\tthis.$confirm('将要退出当前账号, 是否继续?', '提示', {\r\n\t\t\t\t\tconfirmButtonText: '确定',\r\n\t\t\t\t\tcancelButtonText: '取消',\r\n\t\t\t\t\ttype: 'warning'\r\n\t\t\t\t}).then(() => {}).catch(() => {\r\n\t\t\t\t\treturn\r\n\t\t\t\t});\r\n\t\t\t\tthis.$axios({\r\n\t\t\t\t\turl: this.baseUrl + \"/access/exitLogin\",\r\n\t\t\t\t\tmethod: \"GET\",\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tconsole.log(res)\r\n\t\t\t\t\tif (res.data.E_BACKSTATUS == '0') {\r\n\t\t\t\t\t\t//已有登录状态  展示个人信息\r\n\t\t\t\t\t\tthis.user = res.data.user\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//未登录 跳转到登录界面\r\n\t\t\t\t\t\tthis.$router.push(\"/Login\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch(e => {\r\n\t\t\t\t\tconsole.log(\"网络异常\")\r\n\t\t\t\t\tthis.$router.push(\"/EXAM\")\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t//选中侧边导航栏时 新增标签卡 并定位到新标签卡 并使路由指向标签卡对应的地址\r\n\t\t\thandleSelectAside(key) {\r\n\t\t\t\tif (!tabMap.has(key)) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\t//1.跳转到对应的路由地址\r\n\t\t\t\tthis.$router.push(key)\r\n\t\t\t\tconsole.log(this.hasTab(key))\r\n\t\t\t\tif (this.hasTab(key)) { //2.判断标签卡是否已存在\r\n\t\t\t\t\t//2.1标签卡已经打开则跳转到对应的标签卡\r\n\t\t\t\t\tthis.activeTab = key\r\n\t\t\t\t\tthis.preTab = key\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\t//3.标签不存在 创建新的标签卡\r\n\t\t\t\tthis.editableTabs.push({\r\n\t\t\t\t\ttitle: tabMap.get(key),\r\n\t\t\t\t\tname: key,\r\n\t\t\t\t\tclosable: true\r\n\t\t\t\t})\r\n\t\t\t\t//4.定位到新标签卡\r\n\t\t\t\tthis.activeTab = key\r\n\t\t\t\tthis.preTab = key\r\n\t\t\t},\r\n\t\t\t//选择主体内容的标签时\r\n\t\t\tselectTab(data) {\r\n\t\t\t\tif (this.activeTab == this.preTab) {\r\n\t\t\t\t\t//2.选中的标签卡已经展示 则不操作\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\t//3.点击新的标签卡 跳转到对应路由\r\n\t\t\t\tthis.preTab = this.activeTab\r\n\t\t\t\tthis.$router.push(this.activeTab)\r\n\t\t\t},\r\n\t\t\thandleTabsClose(data) {},\r\n\t\t\thandleTabsEdit(targetName, action) {\r\n\t\t\t\tif (action === 'add') {\r\n\t\t\t\t\t// let newTabName = ++this.tabIndex + '';\r\n\t\t\t\t\t// this.editableTabs.push({\r\n\t\t\t\t\t// \ttitle: 'New Tab',\r\n\t\t\t\t\t// \tname: newTabName,\r\n\t\t\t\t\t// \tcontent: 'New Tab content'\r\n\t\t\t\t\t// });\r\n\t\t\t\t\t// this.editableTabsValue = newTabName;\r\n\t\t\t\t}\r\n\t\t\t\tif (action === 'remove') {\r\n\t\t\t\t\tlet tabs = this.editableTabs;\r\n\t\t\t\t\tlet welcomeName = \"/Welcome\"\r\n\t\t\t\t\tlet activeName = this.activeTab;\r\n\t\t\t\t\tif (activeName === targetName) {\r\n\t\t\t\t\t\t//1.如果关闭的是当前打开的标签卡  \r\n\t\t\t\t\t\ttabs.forEach((tab, index) => {\r\n\t\t\t\t\t\t\tif (tab.name === targetName) {\r\n\t\t\t\t\t\t\t\t//2.获取当前页的下一页\r\n\t\t\t\t\t\t\t\tlet nextTab = tabs[index + 1] || tabs[index - 1];\r\n\t\t\t\t\t\t\t\tif (nextTab) {\r\n\t\t\t\t\t\t\t\t\t//3.打开下一页\r\n\t\t\t\t\t\t\t\t\tactiveName = nextTab.name;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//5.如果当前已经是最后一页  则打开欢迎页\r\n\t\t\t\t\t\t\t\t\tactiveName = welcomeName\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.activeTab = activeName;\r\n\t\t\t\t\tthis.preTab = activeName\r\n\t\t\t\t\tthis.editableTabs = tabs.filter(tab => tab.name !== targetName);\r\n\t\t\t\t\tthis.handleSelectAside(activeName)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thasTab(key) {\r\n\t\t\t\tvar flag = false\r\n\t\t\t\tthis.editableTabs.forEach((tab, index) => {\r\n\t\t\t\t\tif (tab.name == key) {\r\n\t\t\t\t\t\tflag = true\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn flag\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\n"],"sourceRoot":"src/components"}]}