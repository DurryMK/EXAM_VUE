{"remainingRequest":"D:\\durry\\HBx\\HBworkplace\\EXAM_VUE\\node_modules\\babel-loader\\lib\\index.js!D:\\durry\\HBx\\HBworkplace\\EXAM_VUE\\src\\router\\index.js","dependencies":[{"path":"D:\\durry\\HBx\\HBworkplace\\EXAM_VUE\\src\\router\\index.js","mtime":1606983581904},{"path":"D:\\durry\\HBx\\HBworkplace\\EXAM_VUE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606012761609},{"path":"D:\\durry\\HBx\\HBworkplace\\EXAM_VUE\\node_modules\\babel-loader\\lib\\index.js","mtime":1606012784177}],"contextDependencies":[],"result":["// 0. 如果使用模块化机制编程，导入Vue和VueRouter，要调用 Vue.use(VueRouter)\nimport Vue from 'vue';\nimport VueRouter from 'vue-router'; // 1. 定义 (路由) 组件。\n// 可以从其他文件 import 进来\n\nimport Loading from \"../components/Loading.vue\";\nimport Home from \"../components/Home.vue\";\nimport Make from \"../components/Make.vue\";\nimport Welcome from \"../components/Welcome.vue\";\nimport List from \"../components/Testlist.vue\";\nimport Login from \"../components/Login.vue\";\nimport App from \"../App.vue\";\n\nvar Personal = function Personal() {\n  return import(\"@/components/Personal\");\n};\n\nVue.use(VueRouter); //获取原型对象上的push函数\n\nvar originalPush = VueRouter.prototype.push; //修改原型对象中的push方法\n\nVueRouter.prototype.push = function push(location) {\n  return originalPush.call(this, location).catch(function (err) {\n    return err;\n  });\n}; // 2. 定义路由\n// 每个路由应该映射一个组件。\n\n\nvar routes = [{\n  path: '/',\n  name: 'App',\n  //页面入口\n  component: App //对应的组件模板\n\n}, {\n  path: '/Login',\n  name: 'Login',\n  //登录组件，\n  component: Login //对应的组件模板\n\n}, {\n  path: '/Loading',\n  name: 'Loading',\n  //过渡组件，\n  component: Loading //对应的组件模板\n\n}, {\n  path: '/EXAM',\n  name: 'Home',\n  //主页面，\n  component: Home,\n  //对应的组件模板\n  children: [{\n    path: '/List',\n    name: 'List',\n    //试卷列表，\n    component: List //对应的组件模板\n\n  }, {\n    path: '/make',\n    name: 'Make',\n    //创建试卷，\n    component: Make //对应的组件模板\n\n  }, {\n    path: '/Welcome',\n    name: 'Welcome',\n    //欢迎页面，\n    component: Welcome //对应的组件模板\n\n  }, {\n    path: '/Personal',\n    name: 'Personal',\n    //欢迎页面，\n    component: Personal //对应的组件模板\n\n  }]\n}]; // 3. 创建 router 实例，然后传 `routes` 配置\n\nvar router = new VueRouter({\n  routes: routes\n});\nexport default router;",{"version":3,"sources":["D:\\durry\\HBx\\HBworkplace\\EXAM_VUE\\src\\router\\index.js"],"names":["Vue","VueRouter","Loading","Home","Make","Welcome","List","Login","App","Personal","use","originalPush","prototype","push","location","call","catch","err","routes","path","name","component","children","router"],"mappings":"AAAA;AACA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;AACA;;AAEA,OAAOC,OAAP;AACA,OAAOC,IAAP;AACA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,GAAP;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAI,OAAO,uBAAP,CAAJ;AAAA,CAAjB;;AACAT,GAAG,CAACU,GAAJ,CAAQT,SAAR,E,CACA;;AACA,IAAMU,YAAY,GAAGV,SAAS,CAACW,SAAV,CAAoBC,IAAzC,C,CACA;;AACAZ,SAAS,CAACW,SAAV,CAAoBC,IAApB,GAA2B,SAASA,IAAT,CAAcC,QAAd,EAAwB;AAClD,SAAOH,YAAY,CAACI,IAAb,CAAkB,IAAlB,EAAwBD,QAAxB,EAAkCE,KAAlC,CAAwC,UAAAC,GAAG;AAAA,WAAIA,GAAJ;AAAA,GAA3C,CAAP;AACA,CAFD,C,CAGA;AACA;;;AAEA,IAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA,IAAI,EAAE,GADQ;AAEdC,EAAAA,IAAI,EAAE,KAFQ;AAED;AACbC,EAAAA,SAAS,EAAEb,GAHG,CAGC;;AAHD,CAAD,EAKd;AACCW,EAAAA,IAAI,EAAE,QADP;AAECC,EAAAA,IAAI,EAAE,OAFP;AAEgB;AACfC,EAAAA,SAAS,EAAEd,KAHZ,CAGkB;;AAHlB,CALc,EAUd;AACCY,EAAAA,IAAI,EAAE,UADP;AAECC,EAAAA,IAAI,EAAE,SAFP;AAEkB;AACjBC,EAAAA,SAAS,EAAEnB,OAHZ,CAGoB;;AAHpB,CAVc,EAcZ;AACDiB,EAAAA,IAAI,EAAE,OADL;AAEDC,EAAAA,IAAI,EAAE,MAFL;AAEa;AACdC,EAAAA,SAAS,EAAElB,IAHV;AAGgB;AACjBmB,EAAAA,QAAQ,EAAE,CAAC;AACTH,IAAAA,IAAI,EAAE,OADG;AAETC,IAAAA,IAAI,EAAE,MAFG;AAEK;AACdC,IAAAA,SAAS,EAAEf,IAHF,CAGO;;AAHP,GAAD,EAIN;AACFa,IAAAA,IAAI,EAAE,OADJ;AAEFC,IAAAA,IAAI,EAAE,MAFJ;AAEY;AACdC,IAAAA,SAAS,EAAEjB,IAHT,CAGc;;AAHd,GAJM,EAST;AACCe,IAAAA,IAAI,EAAE,UADP;AAECC,IAAAA,IAAI,EAAE,SAFP;AAEkB;AACjBC,IAAAA,SAAS,EAAEhB,OAHZ,CAGoB;;AAHpB,GATS,EAcT;AACCc,IAAAA,IAAI,EAAE,WADP;AAECC,IAAAA,IAAI,EAAE,UAFP;AAEmB;AAClBC,IAAAA,SAAS,EAAEZ,QAHZ,CAGqB;;AAHrB,GAdS;AAJT,CAdY,CAAf,C,CAyCA;;AACA,IAAMc,MAAM,GAAG,IAAItB,SAAJ,CAAc;AAC5BiB,EAAAA,MAAM,EAANA;AAD4B,CAAd,CAAf;AAIA,eAAeK,MAAf","sourcesContent":["// 0. 如果使用模块化机制编程，导入Vue和VueRouter，要调用 Vue.use(VueRouter)\r\nimport Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\n// 1. 定义 (路由) 组件。\r\n// 可以从其他文件 import 进来\r\n\r\nimport Loading from '../components/Loading.vue'\r\nimport Home from '../components/Home.vue'\r\nimport Make from \"../components/Make.vue\"\r\nimport Welcome from \"../components/Welcome.vue\"\r\nimport List from \"../components/Testlist.vue\"\r\nimport Login from '../components/Login.vue'\r\nimport App from '../App.vue'\r\nconst Personal = ()=>import(\"@/components/Personal\")\r\nVue.use(VueRouter)\r\n//获取原型对象上的push函数\r\nconst originalPush = VueRouter.prototype.push\r\n//修改原型对象中的push方法\r\nVueRouter.prototype.push = function push(location) {\r\n\treturn originalPush.call(this, location).catch(err => err)\r\n}\r\n// 2. 定义路由\r\n// 每个路由应该映射一个组件。\r\n\r\nconst routes = [{\r\n\t\tpath: '/',\r\n\t\tname: 'App', //页面入口\r\n\t\tcomponent: App //对应的组件模板\r\n\t},\r\n\t{\r\n\t\tpath: '/Login',\r\n\t\tname: 'Login', //登录组件，\r\n\t\tcomponent: Login //对应的组件模板\r\n\t},\r\n\t{\r\n\t\tpath: '/Loading',\r\n\t\tname: 'Loading', //过渡组件，\r\n\t\tcomponent: Loading //对应的组件模板\r\n\t},{\r\n\t\tpath: '/EXAM',\r\n\t\tname: 'Home', //主页面，\r\n\t\tcomponent: Home, //对应的组件模板\r\n\t\tchildren: [{\r\n\t\t\t\tpath: '/List',\r\n\t\t\t\tname: 'List', //试卷列表，\r\n\t\t\t\tcomponent: List //对应的组件模板\r\n\t\t\t}, {\r\n\t\t\t\tpath: '/make',\r\n\t\t\t\tname: 'Make', //创建试卷，\r\n\t\t\t\tcomponent: Make //对应的组件模板\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: '/Welcome',\r\n\t\t\t\tname: 'Welcome', //欢迎页面，\r\n\t\t\t\tcomponent: Welcome //对应的组件模板\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: '/Personal',\r\n\t\t\t\tname: 'Personal', //欢迎页面，\r\n\t\t\t\tcomponent: Personal //对应的组件模板\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n]\r\n\r\n// 3. 创建 router 实例，然后传 `routes` 配置\r\nconst router = new VueRouter({\r\n\troutes\r\n})\r\n\r\nexport default router\n"]}]}